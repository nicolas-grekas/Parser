<?xml version="1.0"?>
<start>
  <asemantic-token name="T_OPEN_TAG" line="1-2">&lt;?php
</asemantic-token>
  <asemantic-token name="T_WHITESPACE" line="2-3">
</asemantic-token>
  <top_statement_list>
    <top_statement>
      <semantic-token name="T_NAMESPACE" line="3">namespace</semantic-token>
      <asemantic-token name="T_WHITESPACE" line="3"> </asemantic-token>
      <namespace_name>
        <semantic-token name="T_STRING" line="3">Tchwork</semantic-token>
        <semantic-token name="T_NS_SEPARATOR" line="3">\</semantic-token>
        <semantic-token name="T_STRING" line="3">Parser</semantic-token>
      </namespace_name>
      <semantic-token name="';'" line="3">;</semantic-token>
    </top_statement>
    <asemantic-token name="T_WHITESPACE" line="3-5">

</asemantic-token>
    <top_statement>
      <semantic-token name="T_USE" line="5">use</semantic-token>
      <asemantic-token name="T_WHITESPACE" line="5"> </asemantic-token>
      <use_declarations>
        <use_declaration>
          <namespace_name>
            <semantic-token name="T_STRING" line="5">DOMDocument</semantic-token>
          </namespace_name>
        </use_declaration>
      </use_declarations>
      <semantic-token name="';'" line="5">;</semantic-token>
    </top_statement>
    <asemantic-token name="T_WHITESPACE" line="5-7">

</asemantic-token>
    <top_statement>
      <statement>
        <expr>
          <expr_without_variable>
            <internal_functions_in_yacc>
              <semantic-token name="T_REQUIRE" line="7">require</semantic-token>
              <asemantic-token name="T_WHITESPACE" line="7"> </asemantic-token>
              <expr>
                <expr_without_variable>
                  <expr>
                    <expr_without_variable>
                      <scalar>
                        <semantic-token name="T_DIR" line="7">__DIR__</semantic-token>
                      </scalar>
                    </expr_without_variable>
                  </expr>
                  <semantic-token name="'.'" line="7">.</semantic-token>
                  <expr>
                    <expr_without_variable>
                      <scalar>
                        <dereferencable_scalar>
                          <semantic-token name="T_CONSTANT_ENCAPSED_STRING" line="7">'/../vendor/autoload.php'</semantic-token>
                        </dereferencable_scalar>
                      </scalar>
                    </expr_without_variable>
                  </expr>
                </expr_without_variable>
              </expr>
            </internal_functions_in_yacc>
          </expr_without_variable>
        </expr>
        <semantic-token name="';'" line="7">;</semantic-token>
      </statement>
    </top_statement>
    <asemantic-token name="T_WHITESPACE" line="7-9">

</asemantic-token>
    <top_statement>
      <statement>
        <expr>
          <expr_without_variable>
            <variable>
              <callable_variable>
                <simple_variable>
                  <semantic-token name="T_VARIABLE" line="9">$lexer</semantic-token>
                </simple_variable>
              </callable_variable>
            </variable>
            <asemantic-token name="T_WHITESPACE" line="9"> </asemantic-token>
            <semantic-token name="'='" line="9">=</semantic-token>
            <asemantic-token name="T_WHITESPACE" line="9"> </asemantic-token>
            <expr>
              <expr_without_variable>
                <new_expr>
                  <semantic-token name="T_NEW" line="9">new</semantic-token>
                  <asemantic-token name="T_WHITESPACE" line="9"> </asemantic-token>
                  <class_name_reference>
                    <class_name>
                      <name>
                        <namespace_name>
                          <semantic-token name="T_STRING" line="9">Lexer</semantic-token>
                          <semantic-token name="T_NS_SEPARATOR" line="9">\</semantic-token>
                          <semantic-token name="T_STRING" line="9">PhpLexer</semantic-token>
                        </namespace_name>
                      </name>
                    </class_name>
                  </class_name_reference>
                  <ctor_arguments>
                    <argument_list>
                      <semantic-token name="'('" line="9">(</semantic-token>
                      <semantic-token name="')'" line="9">)</semantic-token>
                    </argument_list>
                  </ctor_arguments>
                </new_expr>
              </expr_without_variable>
            </expr>
          </expr_without_variable>
        </expr>
        <semantic-token name="';'" line="9">;</semantic-token>
      </statement>
    </top_statement>
    <asemantic-token name="T_WHITESPACE" line="9-11">

</asemantic-token>
    <top_statement>
      <statement>
        <expr>
          <expr_without_variable>
            <variable>
              <callable_variable>
                <simple_variable>
                  <semantic-token name="T_VARIABLE" line="11">$ast</semantic-token>
                </simple_variable>
              </callable_variable>
            </variable>
            <asemantic-token name="T_WHITESPACE" line="11"> </asemantic-token>
            <semantic-token name="'='" line="11">=</semantic-token>
            <asemantic-token name="T_WHITESPACE" line="11"> </asemantic-token>
            <expr>
              <expr_without_variable>
                <new_expr>
                  <semantic-token name="T_NEW" line="11">new</semantic-token>
                  <asemantic-token name="T_WHITESPACE" line="11"> </asemantic-token>
                  <class_name_reference>
                    <class_name>
                      <name>
                        <namespace_name>
                          <semantic-token name="T_STRING" line="11">AstBuilder</semantic-token>
                          <semantic-token name="T_NS_SEPARATOR" line="11">\</semantic-token>
                          <semantic-token name="T_STRING" line="11">XmlAstBuilder</semantic-token>
                        </namespace_name>
                      </name>
                    </class_name>
                  </class_name_reference>
                  <ctor_arguments>
                    <argument_list>
                      <semantic-token name="'('" line="11">(</semantic-token>
                      <semantic-token name="')'" line="11">)</semantic-token>
                    </argument_list>
                  </ctor_arguments>
                </new_expr>
              </expr_without_variable>
            </expr>
          </expr_without_variable>
        </expr>
        <semantic-token name="';'" line="11">;</semantic-token>
      </statement>
    </top_statement>
    <asemantic-token name="T_WHITESPACE" line="11-12">
</asemantic-token>
    <top_statement>
      <statement>
        <expr>
          <expr_without_variable>
            <variable>
              <callable_variable>
                <simple_variable>
                  <semantic-token name="T_VARIABLE" line="12">$parser</semantic-token>
                </simple_variable>
              </callable_variable>
            </variable>
            <asemantic-token name="T_WHITESPACE" line="12"> </asemantic-token>
            <semantic-token name="'='" line="12">=</semantic-token>
            <asemantic-token name="T_WHITESPACE" line="12"> </asemantic-token>
            <expr>
              <expr_without_variable>
                <new_expr>
                  <semantic-token name="T_NEW" line="12">new</semantic-token>
                  <asemantic-token name="T_WHITESPACE" line="12"> </asemantic-token>
                  <class_name_reference>
                    <class_name>
                      <name>
                        <namespace_name>
                          <semantic-token name="T_STRING" line="12">Parser</semantic-token>
                          <semantic-token name="T_NS_SEPARATOR" line="12">\</semantic-token>
                          <semantic-token name="T_STRING" line="12">PhpParser</semantic-token>
                        </namespace_name>
                      </name>
                    </class_name>
                  </class_name_reference>
                  <ctor_arguments>
                    <argument_list>
                      <semantic-token name="'('" line="12">(</semantic-token>
                      <non_empty_argument_list>
                        <argument>
                          <expr>
                            <variable>
                              <callable_variable>
                                <simple_variable>
                                  <semantic-token name="T_VARIABLE" line="12">$lexer</semantic-token>
                                </simple_variable>
                              </callable_variable>
                            </variable>
                          </expr>
                        </argument>
                        <semantic-token name="','" line="12">,</semantic-token>
                        <asemantic-token name="T_WHITESPACE" line="12"> </asemantic-token>
                        <argument>
                          <expr>
                            <variable>
                              <callable_variable>
                                <simple_variable>
                                  <semantic-token name="T_VARIABLE" line="12">$ast</semantic-token>
                                </simple_variable>
                              </callable_variable>
                            </variable>
                          </expr>
                        </argument>
                      </non_empty_argument_list>
                      <semantic-token name="')'" line="12">)</semantic-token>
                    </argument_list>
                  </ctor_arguments>
                </new_expr>
              </expr_without_variable>
            </expr>
          </expr_without_variable>
        </expr>
        <semantic-token name="';'" line="12">;</semantic-token>
      </statement>
    </top_statement>
    <asemantic-token name="T_WHITESPACE" line="12-14">

</asemantic-token>
    <top_statement>
      <statement>
        <expr>
          <expr_without_variable>
            <variable>
              <callable_variable>
                <simple_variable>
                  <semantic-token name="T_VARIABLE" line="14">$doc</semantic-token>
                </simple_variable>
              </callable_variable>
            </variable>
            <asemantic-token name="T_WHITESPACE" line="14"> </asemantic-token>
            <semantic-token name="'='" line="14">=</semantic-token>
            <asemantic-token name="T_WHITESPACE" line="14"> </asemantic-token>
            <expr>
              <variable>
                <callable_variable>
                  <dereferencable>
                    <variable>
                      <callable_variable>
                        <simple_variable>
                          <semantic-token name="T_VARIABLE" line="14">$parser</semantic-token>
                        </simple_variable>
                      </callable_variable>
                    </variable>
                  </dereferencable>
                  <semantic-token name="T_OBJECT_OPERATOR" line="14">-&gt;</semantic-token>
                  <member_name>
                    <semantic-token name="T_STRING" line="14">parse</semantic-token>
                  </member_name>
                  <argument_list>
                    <semantic-token name="'('" line="14">(</semantic-token>
                    <non_empty_argument_list>
                      <argument>
                        <expr>
                          <variable>
                            <callable_variable>
                              <function_call>
                                <name>
                                  <namespace_name>
                                    <semantic-token name="T_STRING" line="14">file_get_contents</semantic-token>
                                  </namespace_name>
                                </name>
                                <argument_list>
                                  <semantic-token name="'('" line="14">(</semantic-token>
                                  <non_empty_argument_list>
                                    <argument>
                                      <expr>
                                        <expr_without_variable>
                                          <expr>
                                            <expr_without_variable>
                                              <internal_functions_in_yacc>
                                                <semantic-token name="T_ISSET" line="14">isset</semantic-token>
                                                <semantic-token name="'('" line="14">(</semantic-token>
                                                <isset_variables>
                                                  <isset_variable>
                                                    <expr>
                                                      <variable>
                                                        <callable_variable>
                                                          <dereferencable>
                                                            <variable>
                                                            <callable_variable>
                                                            <dereferencable>
                                                            <variable>
                                                            <callable_variable>
                                                            <simple_variable>
                                                            <semantic-token name="T_VARIABLE" line="14">$_SERVER</semantic-token>
                                                            </simple_variable>
                                                            </callable_variable>
                                                            </variable>
                                                            </dereferencable>
                                                            <semantic-token name="'['" line="14">[</semantic-token>
                                                            <optional_expr>
                                                            <expr>
                                                            <expr_without_variable>
                                                            <scalar>
                                                            <dereferencable_scalar>
                                                            <semantic-token name="T_CONSTANT_ENCAPSED_STRING" line="14">'argv'</semantic-token>
                                                            </dereferencable_scalar>
                                                            </scalar>
                                                            </expr_without_variable>
                                                            </expr>
                                                            </optional_expr>
                                                            <semantic-token name="']'" line="14">]</semantic-token>
                                                            </callable_variable>
                                                            </variable>
                                                          </dereferencable>
                                                          <semantic-token name="'['" line="14">[</semantic-token>
                                                          <optional_expr>
                                                            <expr>
                                                            <expr_without_variable>
                                                            <scalar>
                                                            <semantic-token name="T_LNUMBER" line="14">1</semantic-token>
                                                            </scalar>
                                                            </expr_without_variable>
                                                            </expr>
                                                          </optional_expr>
                                                          <semantic-token name="']'" line="14">]</semantic-token>
                                                        </callable_variable>
                                                      </variable>
                                                    </expr>
                                                  </isset_variable>
                                                </isset_variables>
                                                <semantic-token name="')'" line="14">)</semantic-token>
                                              </internal_functions_in_yacc>
                                            </expr_without_variable>
                                          </expr>
                                          <asemantic-token name="T_WHITESPACE" line="14"> </asemantic-token>
                                          <semantic-token name="'?'" line="14">?</semantic-token>
                                          <asemantic-token name="T_WHITESPACE" line="14"> </asemantic-token>
                                          <expr>
                                            <variable>
                                              <callable_variable>
                                                <dereferencable>
                                                  <variable>
                                                    <callable_variable>
                                                      <dereferencable>
                                                        <variable>
                                                          <callable_variable>
                                                            <simple_variable>
                                                            <semantic-token name="T_VARIABLE" line="14">$_SERVER</semantic-token>
                                                            </simple_variable>
                                                          </callable_variable>
                                                        </variable>
                                                      </dereferencable>
                                                      <semantic-token name="'['" line="14">[</semantic-token>
                                                      <optional_expr>
                                                        <expr>
                                                          <expr_without_variable>
                                                            <scalar>
                                                            <dereferencable_scalar>
                                                            <semantic-token name="T_CONSTANT_ENCAPSED_STRING" line="14">'argv'</semantic-token>
                                                            </dereferencable_scalar>
                                                            </scalar>
                                                          </expr_without_variable>
                                                        </expr>
                                                      </optional_expr>
                                                      <semantic-token name="']'" line="14">]</semantic-token>
                                                    </callable_variable>
                                                  </variable>
                                                </dereferencable>
                                                <semantic-token name="'['" line="14">[</semantic-token>
                                                <optional_expr>
                                                  <expr>
                                                    <expr_without_variable>
                                                      <scalar>
                                                        <semantic-token name="T_LNUMBER" line="14">1</semantic-token>
                                                      </scalar>
                                                    </expr_without_variable>
                                                  </expr>
                                                </optional_expr>
                                                <semantic-token name="']'" line="14">]</semantic-token>
                                              </callable_variable>
                                            </variable>
                                          </expr>
                                          <asemantic-token name="T_WHITESPACE" line="14"> </asemantic-token>
                                          <semantic-token name="':'" line="14">:</semantic-token>
                                          <asemantic-token name="T_WHITESPACE" line="14"> </asemantic-token>
                                          <expr>
                                            <expr_without_variable>
                                              <scalar>
                                                <semantic-token name="T_FILE" line="14">__FILE__</semantic-token>
                                              </scalar>
                                            </expr_without_variable>
                                          </expr>
                                        </expr_without_variable>
                                      </expr>
                                    </argument>
                                  </non_empty_argument_list>
                                  <semantic-token name="')'" line="14">)</semantic-token>
                                </argument_list>
                              </function_call>
                            </callable_variable>
                          </variable>
                        </expr>
                      </argument>
                    </non_empty_argument_list>
                    <semantic-token name="')'" line="14">)</semantic-token>
                  </argument_list>
                </callable_variable>
              </variable>
            </expr>
          </expr_without_variable>
        </expr>
        <semantic-token name="';'" line="14">;</semantic-token>
      </statement>
    </top_statement>
    <asemantic-token name="T_WHITESPACE" line="14-15">
</asemantic-token>
    <top_statement>
      <statement>
        <expr>
          <expr_without_variable>
            <variable>
              <dereferencable>
                <variable>
                  <callable_variable>
                    <simple_variable>
                      <semantic-token name="T_VARIABLE" line="15">$doc</semantic-token>
                    </simple_variable>
                  </callable_variable>
                </variable>
              </dereferencable>
              <semantic-token name="T_OBJECT_OPERATOR" line="15">-&gt;</semantic-token>
              <member_name>
                <semantic-token name="T_STRING" line="15">preserveWhiteSpace</semantic-token>
              </member_name>
            </variable>
            <asemantic-token name="T_WHITESPACE" line="15"> </asemantic-token>
            <semantic-token name="'='" line="15">=</semantic-token>
            <asemantic-token name="T_WHITESPACE" line="15"> </asemantic-token>
            <expr>
              <expr_without_variable>
                <scalar>
                  <constant>
                    <name>
                      <namespace_name>
                        <semantic-token name="T_STRING" line="15">true</semantic-token>
                      </namespace_name>
                    </name>
                  </constant>
                </scalar>
              </expr_without_variable>
            </expr>
          </expr_without_variable>
        </expr>
        <semantic-token name="';'" line="15">;</semantic-token>
      </statement>
    </top_statement>
    <asemantic-token name="T_WHITESPACE" line="15-16">
</asemantic-token>
    <top_statement>
      <statement>
        <expr>
          <expr_without_variable>
            <variable>
              <dereferencable>
                <variable>
                  <callable_variable>
                    <simple_variable>
                      <semantic-token name="T_VARIABLE" line="16">$doc</semantic-token>
                    </simple_variable>
                  </callable_variable>
                </variable>
              </dereferencable>
              <semantic-token name="T_OBJECT_OPERATOR" line="16">-&gt;</semantic-token>
              <member_name>
                <semantic-token name="T_STRING" line="16">formatOutput</semantic-token>
              </member_name>
            </variable>
            <asemantic-token name="T_WHITESPACE" line="16"> </asemantic-token>
            <semantic-token name="'='" line="16">=</semantic-token>
            <asemantic-token name="T_WHITESPACE" line="16"> </asemantic-token>
            <expr>
              <expr_without_variable>
                <scalar>
                  <constant>
                    <name>
                      <namespace_name>
                        <semantic-token name="T_STRING" line="16">true</semantic-token>
                      </namespace_name>
                    </name>
                  </constant>
                </scalar>
              </expr_without_variable>
            </expr>
          </expr_without_variable>
        </expr>
        <semantic-token name="';'" line="16">;</semantic-token>
      </statement>
    </top_statement>
    <asemantic-token name="T_WHITESPACE" line="16-18">

</asemantic-token>
    <top_statement>
      <statement>
        <semantic-token name="T_ECHO" line="18">echo</semantic-token>
        <asemantic-token name="T_WHITESPACE" line="18"> </asemantic-token>
        <echo_expr_list>
          <echo_expr>
            <expr>
              <variable>
                <callable_variable>
                  <dereferencable>
                    <variable>
                      <callable_variable>
                        <simple_variable>
                          <semantic-token name="T_VARIABLE" line="18">$doc</semantic-token>
                        </simple_variable>
                      </callable_variable>
                    </variable>
                  </dereferencable>
                  <semantic-token name="T_OBJECT_OPERATOR" line="18">-&gt;</semantic-token>
                  <member_name>
                    <semantic-token name="T_STRING" line="18">saveXML</semantic-token>
                  </member_name>
                  <argument_list>
                    <semantic-token name="'('" line="18">(</semantic-token>
                    <semantic-token name="')'" line="18">)</semantic-token>
                  </argument_list>
                </callable_variable>
              </variable>
            </expr>
          </echo_expr>
        </echo_expr_list>
        <semantic-token name="';'" line="18">;</semantic-token>
      </statement>
    </top_statement>
    <asemantic-token name="T_WHITESPACE" line="18-20">

</asemantic-token>
    <top_statement>
      <semantic-token name="T_HALT_COMPILER" line="20">__halt_compiler</semantic-token>
      <semantic-token name="'('" line="20">(</semantic-token>
      <semantic-token name="')'" line="20">)</semantic-token>
      <semantic-token name="';'" line="20">;</semantic-token>
    </top_statement>
    <top_statement>
      <statement>
        <semantic-token name="T_INLINE_HTML" line="20-22">
()&lt;?php ()
</semantic-token>
      </statement>
    </top_statement>
  </top_statement_list>
</start>
